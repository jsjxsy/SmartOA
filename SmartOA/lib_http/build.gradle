apply plugin: 'com.android.library'
def config = rootProject.extensions.findByName("ext")
android {
    compileSdkVersion config.android['compileSdkVer']
    buildToolsVersion config.android['buildToolsVer']


    defaultConfig {
        minSdkVersion config.android['minSdkVer']
        targetSdkVersion config.android['targetSdkVer']
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
//    /*
//    * 2.添加sourceSets
//    *
//    */
//    sourceSets {
//        main {
//            proto {
//                srcDir 'src/main/proto'
//                include '**/*.proto'
//            }
//            java {
//                srcDir 'src/main/java'
//            }
//            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
//        }
//    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation config.dependencies['appcomat']
    //test java
    testImplementation config.dependencies['junit']
    //test android
    androidTestImplementation config.dependencies['ext_junit']
    androidTestImplementation config.dependencies['espresso']


    //gson
    implementation "com.google.code.gson:gson:${config.version['gsonVersion']}"
    //GRPC
    implementation "io.grpc:grpc-okhttp:${config.GRPC_VERSION}"
    implementation "io.grpc:grpc-protobuf-lite:${config.GRPC_VERSION}"
    implementation "io.grpc:grpc-stub:${config.GRPC_VERSION}"
    implementation 'javax.annotation:javax.annotation-api:1.2'
}


/*
* 4.添加protobuf
* */
//protobuf {
//    protoc { artifact = 'com.google.protobuf:protoc:3.4.0' }
//    plugins {
//        javalite { artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0" }
//        grpc {
//            artifact = "io.grpc:protoc-gen-grpc-java:${config.GRPC_VERSION}" // CURRENT_GRPC_VERSION
//        }
//    }
//    generateProtoTasks {
//        all().each { task ->
//            task.plugins {
//                javalite {}
//                grpc { // Options added to --grpc_out
//                    option 'lite'
//                }
//            }
//        }
//    }
//}
